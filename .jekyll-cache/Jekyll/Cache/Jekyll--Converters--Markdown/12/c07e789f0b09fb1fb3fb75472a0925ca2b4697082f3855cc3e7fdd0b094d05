I"AE<p>MongoDB是一款开源的、分布式文档型数据库产品，其提供了无结构、高性能、高可用、自动伸缩的特性吸引了不少开发者的青睐，公司里面不少项目中都有它的影子，所以打算学习学习。</p>

<p>MongoDB Docker仓库地址<a href="https://hub.docker.com/r/bitnami/mongodb/">bitnami/mongodb</a>，本文中所有命令都在mongo shell环境下执行</p>

<h4 id="基本概念">基本概念</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: center">MongoDB</th>
      <th style="text-align: center">关系型数据库</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">db</td>
      <td style="text-align: center">database</td>
    </tr>
    <tr>
      <td style="text-align: center">collection</td>
      <td style="text-align: center">table</td>
    </tr>
    <tr>
      <td style="text-align: center">document</td>
      <td style="text-align: center">row</td>
    </tr>
  </tbody>
</table>

<p>上述表中的概念并不是严格对等，在MongoDB中不需要事先创建db或collection，插入文档时不存在对应的db或collection会自动创建</p>

<p>一条数据记录在MongoDB中定义为一个文档，内部以BSON作为其存储格式，BSON基本格式与JSON类似：
<img src="/img/2018/12/08/01/01.jpg" alt="" /></p>

<p>切换到test数据库:</p>

<p><code class="language-plaintext highlighter-rouge">use test </code></p>

<p>查看数据库中的集合:</p>

<p><code class="language-plaintext highlighter-rouge"> show collections </code></p>

<p>查看当前MongoDB实例中存在的数据库:</p>

<p><code class="language-plaintext highlighter-rouge"> show databases </code></p>

<p>当前使用的是哪个数据库：</p>

<p><code class="language-plaintext highlighter-rouge"> db.getName() </code></p>

<p>mongo shell中查看对象支持的方法，都可以通过名称.help()查看:</p>

<p><code class="language-plaintext highlighter-rouge"> db.help() </code></p>

<h4 id="crud">CRUD</h4>

<h5 id="插入">插入</h5>

<p>MongoDB插入支持单条、批量插入，基本使用方式:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> use <span class="nb">test</span>
<span class="o">&gt;</span> db.inventory.insertOne<span class="o">({</span> item: <span class="s2">"canvas"</span>, qty: 100, tags: <span class="o">[</span><span class="s2">"cotton"</span><span class="o">]</span>, size: <span class="o">{</span> h: 28, w: 35.5, uom: <span class="s2">"cm"</span> <span class="o">}</span> <span class="o">})</span>
<span class="o">{</span>
	<span class="s2">"acknowledged"</span> : <span class="nb">true</span>,
	<span class="s2">"insertedId"</span> : ObjectId<span class="o">(</span><span class="s2">"5c0a382808d4278148c007e1"</span><span class="o">)</span>
<span class="o">}</span>
<span class="o">&gt;</span> db.inventory.insertMany<span class="o">([</span>
...    <span class="o">{</span> item: <span class="s2">"journal"</span>, qty: 25, tags: <span class="o">[</span><span class="s2">"blank"</span>, <span class="s2">"red"</span><span class="o">]</span>, size: <span class="o">{</span> h: 14, w: 21, uom: <span class="s2">"cm"</span> <span class="o">}</span> <span class="o">}</span>,
...    <span class="o">{</span> item: <span class="s2">"mat"</span>, qty: 85, tags: <span class="o">[</span><span class="s2">"gray"</span><span class="o">]</span>, size: <span class="o">{</span> h: 27.9, w: 35.5, uom: <span class="s2">"cm"</span> <span class="o">}</span> <span class="o">}</span>,
...    <span class="o">{</span> item: <span class="s2">"mousepad"</span>, qty: 25, tags: <span class="o">[</span><span class="s2">"gel"</span>, <span class="s2">"blue"</span><span class="o">]</span>, size: <span class="o">{</span> h: 19, w: 22.85, uom: <span class="s2">"cm"</span> <span class="o">}</span> <span class="o">}</span>
... <span class="o">])</span>
<span class="o">{</span>
	<span class="s2">"acknowledged"</span> : <span class="nb">true</span>,
	<span class="s2">"insertedIds"</span> : <span class="o">[</span>
		ObjectId<span class="o">(</span><span class="s2">"5c0a382d08d4278148c007e2"</span><span class="o">)</span>,
		ObjectId<span class="o">(</span><span class="s2">"5c0a382d08d4278148c007e3"</span><span class="o">)</span>,
		ObjectId<span class="o">(</span><span class="s2">"5c0a382d08d4278148c007e4"</span><span class="o">)</span>
	<span class="o">]</span>
<span class="o">}</span>
</code></pre></div></div>
<p>MongoDB默认会自动为每条文档生成一个ObjectID对象作为其唯一标识</p>

<h5 id="查询">查询</h5>

<p>测试数据集:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>db.inventory.insertMany<span class="o">([</span>
   <span class="o">{</span> item: <span class="s2">"journal"</span>, qty: 25, size: <span class="o">{</span> h: 14, w: 21, uom: <span class="s2">"cm"</span> <span class="o">}</span>, status: <span class="s2">"A"</span> <span class="o">}</span>,
   <span class="o">{</span> item: <span class="s2">"notebook"</span>, qty: 50, size: <span class="o">{</span> h: 8.5, w: 11, uom: <span class="s2">"in"</span> <span class="o">}</span>, status: <span class="s2">"A"</span> <span class="o">}</span>,
   <span class="o">{</span> item: <span class="s2">"paper"</span>, qty: 100, size: <span class="o">{</span> h: 8.5, w: 11, uom: <span class="s2">"in"</span> <span class="o">}</span>, status: <span class="s2">"D"</span> <span class="o">}</span>,
   <span class="o">{</span> item: <span class="s2">"planner"</span>, qty: 75, size: <span class="o">{</span> h: 22.85, w: 30, uom: <span class="s2">"cm"</span> <span class="o">}</span>, status: <span class="s2">"D"</span> <span class="o">}</span>,
   <span class="o">{</span> item: <span class="s2">"postcard"</span>, qty: 45, size: <span class="o">{</span> h: 10, w: 15.25, uom: <span class="s2">"cm"</span> <span class="o">}</span>, status: <span class="s2">"A"</span> <span class="o">}</span>
<span class="o">])</span><span class="p">;</span>
</code></pre></div></div>
<p>查询所有文档:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>db.inventory.find<span class="o">()</span>
等价于SQL:
SELECT <span class="k">*</span> FROM inventory
</code></pre></div></div>
<p>等值查询:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>db.inventory.find<span class="o">(</span> <span class="o">{</span> status: <span class="s2">"D"</span> <span class="o">}</span> <span class="o">)</span>
等价SQL:
SELECT <span class="k">*</span> FROM inventory WHERE status <span class="o">=</span> <span class="s2">"D"</span>
</code></pre></div></div>

<p>MongoDB查询选择器支持如下比较操作符:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name</th>
      <th style="text-align: center">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">$eq</td>
      <td style="text-align: center">Matches values that are equal to a specified value.</td>
    </tr>
    <tr>
      <td style="text-align: center">$ne</td>
      <td style="text-align: center">Matches all values that are not equal to a specified value.</td>
    </tr>
    <tr>
      <td style="text-align: center">$gt</td>
      <td style="text-align: center">Matches values that are greater than a specified value.</td>
    </tr>
    <tr>
      <td style="text-align: center">$gte</td>
      <td style="text-align: center">Matches values that are greater than or equal to a specified value.</td>
    </tr>
    <tr>
      <td style="text-align: center">$lt</td>
      <td style="text-align: center">Matches values that are less than a specified value.</td>
    </tr>
    <tr>
      <td style="text-align: center">$lte</td>
      <td style="text-align: center">Matches values that are less than or equal to a specified value.</td>
    </tr>
    <tr>
      <td style="text-align: center">$in</td>
      <td style="text-align: center">Matches any of the values specified in an array.</td>
    </tr>
    <tr>
      <td style="text-align: center">$nin</td>
      <td style="text-align: center">Matches none of the values specified in an array.</td>
    </tr>
  </tbody>
</table>

<p>比较操作符的语法格式为:</p>

<p><code class="language-plaintext highlighter-rouge">{ &lt;field1&gt;: { &lt;operator1&gt;: &lt;value1&gt; }, ... }</code></p>

<p>比如查询qty大于等于50的文档:</p>

<p><code class="language-plaintext highlighter-rouge">db.inventory.find({qty: {$gte: 50}})</code></p>

<p>其他比较操作符与此类似，不做过多叙述</p>

<p>MongoDB支持四个逻辑运算符：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name</th>
      <th style="text-align: center">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">$and</td>
      <td style="text-align: center">Joins query clauses with a logical AND returns all documents that match the conditions of both clauses.</td>
    </tr>
    <tr>
      <td style="text-align: center">$not</td>
      <td style="text-align: center">Inverts the effect of a query expression and returns documents that do not match the query expression.</td>
    </tr>
    <tr>
      <td style="text-align: center">$nor</td>
      <td style="text-align: center">Joins query clauses with a logical NOR returns all documents that fail to match both clauses.</td>
    </tr>
    <tr>
      <td style="text-align: center">$or</td>
      <td style="text-align: center">Joins query clauses with a logical OR returns all documents that match the conditions of either clause.</td>
    </tr>
  </tbody>
</table>

<p>一些使用例子:</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>db.inventory.find<span class="o">(</span> <span class="o">{</span> status: <span class="s2">"A"</span>, qty: <span class="o">{</span> <span class="nv">$lt</span>: 30 <span class="o">}</span> <span class="o">}</span> <span class="o">)</span>
等价SQL:
SELECT <span class="k">*</span> FROM inventory WHERE status <span class="o">=</span> <span class="s2">"A"</span> AND qty &lt; 30

db.inventory.find<span class="o">(</span> <span class="o">{</span> <span class="nv">$or</span>: <span class="o">[</span> <span class="o">{</span> status: <span class="s2">"A"</span> <span class="o">}</span>, <span class="o">{</span> qty: <span class="o">{</span> <span class="nv">$lt</span>: 30 <span class="o">}</span> <span class="o">}</span> <span class="o">]</span> <span class="o">}</span> <span class="o">)</span>
等价SQL:
SELECT <span class="k">*</span> FROM inventory WHERE status <span class="o">=</span> <span class="s2">"A"</span> OR qty &lt; 30

db.inventory.find<span class="o">({</span>qty: <span class="o">{</span><span class="nv">$not</span>: <span class="o">{</span><span class="nv">$gt</span>: 40<span class="o">}}})</span>
等价SQL:
SELECT <span class="k">*</span> FROM inventory WHERE NOT qty <span class="o">&gt;</span> 40

db.inventory.find<span class="o">({</span><span class="nv">$nor</span>: <span class="o">[{</span>qty: 25<span class="o">}</span>, <span class="o">{</span>status: <span class="s2">"D"</span><span class="o">}</span>, <span class="o">{</span><span class="s2">"item"</span>: <span class="s2">"note"</span><span class="o">}]})</span>
等价SQL:
SELECT <span class="k">*</span> FROM inventory WHERE NOT qty <span class="o">=</span> 25 and not status <span class="o">=</span> <span class="s2">"D"</span> and not item <span class="o">=</span> <span class="s2">"note"</span>

</code></pre></div></div>

<p>find函数支持两个参数，上面查询例子中仅使用了query参数，其第二个参数为projection，主要作用用于明确指定返回的字段，从而降低网络传输，基本语法:</p>

<p><code class="language-plaintext highlighter-rouge"> { field1: &lt;value&gt;, field2: &lt;value&gt; ... } </code></p>

<p>value取值为0、1、true、false、<a href="https://docs.mongodb.com/manual/reference/operator/projection/">Projection Operators</a>，例如指定返回文档仅包含item字段(_id默认返回):</p>

<p><code class="language-plaintext highlighter-rouge"> db.inventory.find({}, {item: 1}) </code></p>

<p>更多关于MongoDB查询说明，可参考官方文档提供的例子<a href="https://docs.mongodb.com/manual/tutorial/query-documents/">Query Documents</a></p>

<h5 id="更新">更新</h5>

<p>MongoDB同样地支持单条、批量更新，不过MongoDB需要特定的更新操作符来完成更新，这里罗列比较常用的一些更新操作符:</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Name</th>
      <th style="text-align: center">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">$currentDate</td>
      <td style="text-align: center">Sets the value of a field to current date, either as a Date or a Timestamp.</td>
    </tr>
    <tr>
      <td style="text-align: center">$inc</td>
      <td style="text-align: center">Increments the value of the field by the specified amount.</td>
    </tr>
    <tr>
      <td style="text-align: center">$min</td>
      <td style="text-align: center">Only updates the field if the specified value is less than the existing field value.</td>
    </tr>
    <tr>
      <td style="text-align: center">$max</td>
      <td style="text-align: center">Only updates the field if the specified value is greater than the existing field value.</td>
    </tr>
    <tr>
      <td style="text-align: center">$mul</td>
      <td style="text-align: center">Multiplies the value of the field by the specified amount.</td>
    </tr>
    <tr>
      <td style="text-align: center">$rename</td>
      <td style="text-align: center">Renames a field.</td>
    </tr>
    <tr>
      <td style="text-align: center">$set</td>
      <td style="text-align: center">Sets the value of a field in a document.</td>
    </tr>
    <tr>
      <td style="text-align: center">$unset</td>
      <td style="text-align: center">Removes the specified field from a document.</td>
    </tr>
  </tbody>
</table>

<p>更新使用例子:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>db.inventory.updateOne<span class="o">({}</span>, <span class="o">{</span><span class="nv">$inc</span>: <span class="o">{</span>qty: 1<span class="o">}})</span>
等价SQL:
UPDATE inventory SET qty <span class="o">=</span> qty + 1 LIMIT 1

db.inventory.updateMany<span class="o">({</span>status: <span class="s2">"A"</span><span class="o">}</span>, <span class="o">{</span><span class="nv">$set</span>: <span class="o">{</span>status: <span class="s2">"H"</span><span class="o">}})</span>
等价SQL:
UPDATE inventory SET status <span class="o">=</span> <span class="s2">"H"</span> where status <span class="o">=</span> <span class="s2">"A"</span>
</code></pre></div></div>
<p>上述例子中MongoDB的更新与其对应的SQL并不完全对等，这里只是简要说明更新操作符的语义。</p>

<p>在MongoDB中，由于schema-less特性，更新数据时可能会导致一些
DDL语义，比如新增字段；另外，MongoDB的DDL和DML是混在一起的</p>

<h5 id="删除">删除</h5>

<p>删除数据比较简单，两个简单例子:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>db.inventory.deleteMany<span class="o">({</span> status : <span class="s2">"A"</span> <span class="o">})</span>

db.inventory.deleteOne<span class="o">(</span> <span class="o">{</span> status: <span class="s2">"D"</span> <span class="o">}</span> <span class="o">)</span>
</code></pre></div></div>

<p>关于MongoDB的删除，有个地方需要注意:<strong><em>删除记录不释放磁盘空间</em></strong>，这很容易理解，为避免记录删除后的数据大规模挪动，原记录空间不删除，只标记“已删除”即可，以后还可以重复利用，可通过db.repairDatabase()来整理，但这个过程比较缓慢</p>

<h4 id="索引">索引</h4>

<p>MongoDB索引使用B树，创建索引基本语法：</p>

<p><code class="language-plaintext highlighter-rouge">db.collection.createIndex(keys, options)</code></p>

<p>keys参数为一个健值对对象，健为索引字段，值为索引字段类型，1为升序，-1为降序;options参数可用于指定索引名称、是否唯一、存储引擎等</p>

<p>在inventory集合中给qty加上索引:</p>

<p><code class="language-plaintext highlighter-rouge"> db.inventory.createIndex({qty: 1}, {name: "idx_inventory_qty"}) </code></p>

<p>查看inventory集合中存在的索引:</p>

<p><code class="language-plaintext highlighter-rouge"> db.inventory.getIndexes() </code></p>

<p>删除inventory集合中qty字段索引:</p>

<p><code class="language-plaintext highlighter-rouge">db.inventory.dropIndex({qty: 1}) </code></p>

<p>查看inventory集合中索引占用内存空间的大小，单位为字节:</p>

<p><code class="language-plaintext highlighter-rouge">db.inventory.totalIndexSize()</code></p>

<p>inventory集合中创建(qty, status)联合唯一索引:</p>

<p><code class="language-plaintext highlighter-rouge">db.inventory.createIndex({qty: 1, status: -1}, {unique: true})</code></p>

<p>MongoDB支持多种类型索引，比如稀疏索引、哈希索引、TTL索引、全文索引等，暂时还没有用到这么多，就不做过多介绍，更多的索引说明可参见官方文档<a href="https://docs.mongodb.com/manual/indexes/">Indexes</a>rr</p>
:ET